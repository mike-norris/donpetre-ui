{"version":3,"file":"Dashboard-BnF6O72D.js","sources":["../../node_modules/@mui/icons-material/esm/TrendingUp.js","../../src/pages/dashboard/Dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","import { useEffect, useState } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n} from '@mui/material';\nimport { TrendingUp, LibraryBooks, Search, Add } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { knowledgeService } from 'services/knowledge';\nimport { KnowledgeItem } from '../../types';\nimport paths from 'routes/paths';\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [recentKnowledge, setRecentKnowledge] = useState<KnowledgeItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalKnowledge: 0,\n    totalSources: 0,\n    recentItems: 0,\n  });\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await knowledgeService.getKnowledgeItems(0, 5);\n        setRecentKnowledge(response.content);\n        setStats({\n          totalKnowledge: response.totalElements,\n          totalSources: 3, // placeholder\n          recentItems: response.content.length,\n        });\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const quickActions = [\n    {\n      title: 'Create Knowledge',\n      description: 'Add new knowledge item',\n      icon: Add,\n      action: () => navigate(paths.knowledgeCreate),\n      color: 'primary' as const,\n    },\n    {\n      title: 'Search Knowledge',\n      description: 'Find existing knowledge',\n      icon: Search,\n      action: () => navigate(paths.search),\n      color: 'secondary' as const,\n    },\n    {\n      title: 'Browse All',\n      description: 'View all knowledge items',\n      icon: LibraryBooks,\n      action: () => navigate(paths.knowledge),\n      color: 'info' as const,\n    },\n  ];\n\n  if (loading) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography>Loading dashboard...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Dashboard\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Stats Cards */}\n        <Grid item xs={12} sm={6} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <LibraryBooks sx={{ mr: 2, color: 'primary.main' }} />\n              <Box>\n                <Typography variant=\"h6\">{stats.totalKnowledge}</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total Knowledge Items\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <TrendingUp sx={{ mr: 2, color: 'success.main' }} />\n              <Box>\n                <Typography variant=\"h6\">{stats.recentItems}</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Recent Items\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Search sx={{ mr: 2, color: 'info.main' }} />\n              <Box>\n                <Typography variant=\"h6\">{stats.totalSources}</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Connected Sources\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Quick Actions */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n            Quick Actions\n          </Typography>\n          <Grid container spacing={2}>\n            {quickActions.map((action) => {\n              const Icon = action.icon;\n              return (\n                <Grid item xs={12} sm={6} md={4} key={action.title}>\n                  <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                        <Icon sx={{ mr: 1, color: `${action.color}.main` }} />\n                        <Typography variant=\"h6\">{action.title}</Typography>\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {action.description}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\" color={action.color} onClick={action.action}>\n                        Open\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n\n        {/* Recent Knowledge */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n            Recent Knowledge Items\n          </Typography>\n          <Grid container spacing={2}>\n            {recentKnowledge.map((item) => (\n              <Grid item xs={12} md={6} key={item.id}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                      {item.summary || item.content.substring(0, 150)}...\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                      {item.tags.slice(0, 3).map((tag: string) => (\n                        <Chip key={tag} label={tag} size=\"small\" />\n                      ))}\n                      {item.tags.length > 3 && (\n                        <Chip\n                          label={`+${item.tags.length - 3} more`}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </Box>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => navigate(paths.knowledgeView.replace(':id', item.id))}\n                    >\n                      View\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"names":["TrendingUp","createSvgIcon","_jsx","Dashboard","navigate","useNavigate","recentKnowledge","setRecentKnowledge","useState","loading","setLoading","stats","setStats","useEffect","response","knowledgeService","error","quickActions","Add","paths","Search","LibraryBooks","jsx","Box","Typography","jsxs","Grid","Paper","action","Icon","Card","CardContent","CardActions","Button","item","tag","Chip"],"mappings":"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","x_google_ignoreList":[0]}