{"version":3,"file":"Signup-CVd_SCn3.js","sources":["../../src/pages/authentication/Signup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Link, Alert, Box, Typography, Grid } from '@mui/material';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { authService } from 'services/auth';\nimport paths from 'routes/paths';\n\nconst Signup = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n    if (error) setError('');\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await authService.register({\n        username: formData.username,\n        email: formData.email,\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n      });\n      navigate(paths.signin, {\n        state: { message: 'Account created successfully. Please sign in.' },\n      });\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit}>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom textAlign=\"center\">\n        Sign Up\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"First Name\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Last Name\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n\n      <TextField\n        fullWidth\n        label=\"Username\"\n        name=\"username\"\n        value={formData.username}\n        onChange={handleChange}\n        required\n        sx={{ mt: 2 }}\n      />\n\n      <TextField\n        fullWidth\n        label=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        value={formData.email}\n        onChange={handleChange}\n        required\n        sx={{ mt: 2 }}\n      />\n\n      <TextField\n        fullWidth\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        value={formData.password}\n        onChange={handleChange}\n        required\n        sx={{ mt: 2 }}\n      />\n\n      <TextField\n        fullWidth\n        label=\"Confirm Password\"\n        name=\"confirmPassword\"\n        type=\"password\"\n        value={formData.confirmPassword}\n        onChange={handleChange}\n        required\n        sx={{ mt: 2, mb: 3 }}\n      />\n\n      <Button type=\"submit\" fullWidth variant=\"contained\" disabled={loading} sx={{ mb: 2 }}>\n        {loading ? 'Creating Account...' : 'Sign Up'}\n      </Button>\n\n      <Box textAlign=\"center\">\n        <Typography variant=\"body2\">\n          Already have an account?{' '}\n          <Link component={RouterLink} to={paths.signin}>\n            Sign in\n          </Link>\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Signup;\n"],"names":["Signup","navigate","useNavigate","formData","setFormData","useState","loading","setLoading","error","setError","handleChange","e","handleSubmit","authService","paths","err","_b","_a","jsxs","Box","jsx","Typography","Alert","Grid","TextField","Button","Link","RouterLink"],"mappings":"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"}