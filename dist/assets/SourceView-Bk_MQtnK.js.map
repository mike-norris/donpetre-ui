{"version":3,"file":"SourceView-Bk_MQtnK.js","sources":["../../src/pages/sources/SourceView.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Chip,\n  Divider,\n  Card,\n  CardContent,\n  Grid,\n} from '@mui/material';\nimport {\n  Edit as EditIcon,\n  ArrowBack as ArrowBackIcon,\n  Sync as SyncIcon,\n  GitHub,\n  BugReport as JiraIcon,\n  Source as GitLabIcon,\n} from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { sourcesService } from '../../services/sources';\nimport { KnowledgeSource } from '../../types';\nimport paths from '../../routes/paths';\nimport { format } from 'date-fns';\n\nconst SourceView = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [source, setSource] = useState<KnowledgeSource | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [syncing, setSyncing] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchSource = async () => {\n      if (!id) return;\n\n      try {\n        const sourceData = await sourcesService.getKnowledgeSource(id);\n        setSource(sourceData);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to load knowledge source');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSource();\n  }, [id]);\n\n  const handleSync = async () => {\n    if (!source) return;\n\n    setSyncing(true);\n    try {\n      await sourcesService.syncKnowledgeSource(source.id);\n      // Refresh source data to get updated lastSync\n      const updatedSource = await sourcesService.getKnowledgeSource(source.id);\n      setSource(updatedSource);\n    } catch (err: any) {\n      console.error('Failed to sync source:', err);\n    } finally {\n      setSyncing(false);\n    }\n  };\n\n  const getSourceIcon = (type: string) => {\n    switch (type) {\n      case 'GITHUB':\n        return <GitHub />;\n      case 'JIRA':\n        return <JiraIcon />;\n      case 'GITLAB':\n        return <GitLabIcon />;\n      default:\n        return <GitLabIcon />;\n    }\n  };\n\n  const renderConfigurationDetails = (config: Record<string, any>, type: string) => {\n    switch (type) {\n      case 'GITHUB':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Owner/Organization\n              </Typography>\n              <Typography variant=\"body1\">{config.owner || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Repository\n              </Typography>\n              <Typography variant=\"body1\">{config.repo || 'All repositories'}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Token Status\n              </Typography>\n              <Typography variant=\"body1\">\n                {config.token ? 'Configured' : 'Not configured'}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n\n      case 'JIRA':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                JIRA URL\n              </Typography>\n              <Typography variant=\"body1\">{config.url || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Username\n              </Typography>\n              <Typography variant=\"body1\">{config.username || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Project Key\n              </Typography>\n              <Typography variant=\"body1\">{config.projectKey || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Token Status\n              </Typography>\n              <Typography variant=\"body1\">\n                {config.token ? 'Configured' : 'Not configured'}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n\n      case 'GITLAB':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                GitLab URL\n              </Typography>\n              <Typography variant=\"body1\">{config.url || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Project ID/Path\n              </Typography>\n              <Typography variant=\"body1\">{config.projectId || 'Not configured'}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Token Status\n              </Typography>\n              <Typography variant=\"body1\">\n                {config.token ? 'Configured' : 'Not configured'}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n\n      default:\n        return <Typography>No configuration details available</Typography>;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography>Loading source details...</Typography>\n      </Box>\n    );\n  }\n\n  if (error || !source) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography color=\"error\">{error || 'Knowledge source not found'}</Typography>\n        <Button\n          startIcon={<ArrowBackIcon />}\n          onClick={() => navigate(paths.sources)}\n          sx={{ mt: 2 }}\n        >\n          Back to Sources\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n        <Button\n          startIcon={<ArrowBackIcon />}\n          onClick={() => navigate(paths.sources)}\n          sx={{ mr: 2 }}\n        >\n          Back\n        </Button>\n        <Box sx={{ flexGrow: 1 }} />\n        <Button\n          startIcon={<SyncIcon />}\n          variant=\"outlined\"\n          onClick={handleSync}\n          disabled={syncing}\n          sx={{ mr: 1 }}\n        >\n          {syncing ? 'Syncing...' : 'Sync Now'}\n        </Button>\n        <Button\n          startIcon={<EditIcon />}\n          variant=\"contained\"\n          onClick={() => navigate(paths.sourcesEdit.replace(':id', source.id))}\n        >\n          Edit\n        </Button>\n      </Box>\n\n      <Paper sx={{ p: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n          <Box sx={{ mr: 2 }}>{getSourceIcon(source.type)}</Box>\n          <Box>\n            <Typography variant=\"h4\" component=\"h1\">\n              {source.type} Source\n            </Typography>\n            <Box sx={{ mt: 1 }}>\n              <Chip\n                label={source.isActive ? 'Active' : 'Inactive'}\n                color={source.isActive ? 'success' : 'default'}\n                size=\"small\"\n              />\n            </Box>\n          </Box>\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        <Card sx={{ mb: 3 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Configuration\n            </Typography>\n            {renderConfigurationDetails(source.configuration, source.type)}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Sync Information\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Created\n                </Typography>\n                <Typography variant=\"body1\">{format(new Date(source.createdAt), 'PPP')}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Last Updated\n                </Typography>\n                <Typography variant=\"body1\">{format(new Date(source.updatedAt), 'PPP')}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Last Sync\n                </Typography>\n                <Typography variant=\"body1\">\n                  {source.lastSync ? format(new Date(source.lastSync), 'PPp') : 'Never synced'}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Status\n                </Typography>\n                <Typography variant=\"body1\">{source.isActive ? 'Enabled' : 'Disabled'}</Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SourceView;\n"],"names":["SourceView","id","useParams","navigate","useNavigate","source","setSource","useState","loading","setLoading","syncing","setSyncing","error","setError","useEffect","sourceData","sourcesService","err","_b","_a","handleSync","updatedSource","getSourceIcon","type","GitHub","JiraIcon","GitLabIcon","renderConfigurationDetails","config","jsxs","Grid","jsx","Typography","Box","Button","ArrowBackIcon","paths","SyncIcon","EditIcon","Paper","Chip","Divider","Card","CardContent","format"],"mappings":"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"}